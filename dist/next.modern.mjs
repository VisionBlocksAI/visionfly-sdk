import{createContext as t,useContext as r,useState as a,useEffect as e}from"react";import i from"next/image";function n(){return n=Object.assign?Object.assign.bind():function(t){for(var r=1;r<arguments.length;r++){var a=arguments[r];for(var e in a)({}).hasOwnProperty.call(a,e)&&(t[e]=a[e])}return t},n.apply(null,arguments)}function s(t,r){if(null==t)return{};var a={};for(var e in t)if({}.hasOwnProperty.call(t,e)){if(-1!==r.indexOf(e))continue;a[e]=t[e]}return a}const o=t(null);function l(){const t=r(o);if(!t)throw new Error("useVisionFly must be used within a VisionFlyProvider");return t}const c=["src","width","height","quality","format","blur","sharpen","brightness","contrast","saturation","hue","alt","placeholder"],u=["src","widths","sizes","quality","format","fill","alt","placeholder"];function f(t){let{src:r,width:o,height:u,quality:f,format:d,blur:w,sharpen:g,brightness:b,contrast:m,saturation:p,hue:y,alt:v="",placeholder:q="blur"}=t,U=s(t,c);const{client:S,ready:O}=l(),[$,L]=a(""),[P,x]=a(""),[F,R]=a(!0);return e(()=>{O&&r&&(async()=>{try{const t=await S.getImageUrl({src:r,width:o,height:u,quality:f,format:d,blur:w,sharpen:g,brightness:b,contrast:m,saturation:p,hue:y});if(L(t),"blur"===q){const t=await S.getImageUrl({src:r,width:20,quality:20,format:"webp",blur:10}),a=await fetch(t),e=await a.arrayBuffer(),i=Buffer.from(e).toString("base64");x(`data:image/webp;base64,${i}`)}R(!1)}catch(t){console.error("Failed to load image:",t),R(!1)}})()},[S,O,r,o,u,f,d,w,g,b,m,p,y,q]),F||!$?h("div",{style:{width:o||"100%",height:u||"300px",backgroundColor:"#f0f0f0"}}):h(i,n({src:$,alt:v,width:o,height:u,blurDataURL:P,placeholder:q},U))}function d(t){let{src:r,widths:o,sizes:c,quality:f,format:d,fill:w=!0,alt:g="",placeholder:b="blur"}=t,m=s(t,u);const{client:p,ready:y}=l(),[v,q]=a(null),[U,S]=a(""),[O,$]=a(!0);return e(()=>{y&&r&&(async()=>{try{const t=await p.getSrcSet({src:r,widths:o,format:d,quality:f});if(q(t),"blur"===b){const t=await p.getImageUrl({src:r,width:20,quality:20,format:"webp",blur:10}),a=await fetch(t),e=await a.arrayBuffer(),i=Buffer.from(e).toString("base64");S(`data:image/webp;base64,${i}`)}$(!1)}catch(t){console.error("Failed to load srcset:",t),$(!1)}})()},[p,y,r,o&&JSON.stringify(o),f,d,b]),O||!v?h("div",{style:{position:w?"relative":"static",width:"100%",height:w?"100%":"300px",backgroundColor:"#f0f0f0"}}):h(i,n({src:v.default,alt:g,blurDataURL:U,placeholder:b,fill:w,sizes:c||v.sizes,loader:({src:t,width:r})=>{const a=new URL(t),e=Object.fromEntries(a.searchParams.entries());r&&(e.w=r);const i=new URLSearchParams(e);return`${a.origin}${a.pathname}?${i.toString()}`}},m))}function w(t,r={}){return{imageLoader:({src:a,width:e,quality:i})=>a.includes(t.baseUrl||"api.visionfly.ai")?a:`${t.baseUrl||"https://api.visionfly.ai"}/transform?${new URLSearchParams({src:a,w:e||"",q:i||80,f:r.defaultFormat||"auto"}).toString()}`}}export{f as VFNextImage,d as VFNextResponsiveImage,w as setupVisionFly};
//# sourceMappingURL=next.modern.mjs.map
