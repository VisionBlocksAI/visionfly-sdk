{"version":3,"file":"react.js","sources":["../src/visionfly-core.js","../src/visionfly-react.js"],"sourcesContent":["/**\n * VisionFly - Lightweight Image Optimization SDK\n * @version 1.0.0\n */\n\n/**\n * Core VisionFly client\n */\nclass VisionFly {\n  /**\n   * Initialize VisionFly SDK\n   * @param {Object} config - Configuration options\n   * @param {string} config.apiKey - Your VisionFly API key\n   * @param {string} config.apiSecret - Your VisionFly API secret\n   * @param {string} [config.baseUrl='https://api.visionfly.ai'] - Base API URL\n   * @param {string} [config.cdnUrl='https://cdn.visionfly.ai'] - CDN URL\n   */\n  constructor({\n    apiKey,\n    apiSecret,\n    baseUrl = \"https://api.visionfly.ai\",\n    cdnUrl = \"https://cdn.visionfly.ai\",\n  }) {\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n    this.baseUrl = baseUrl;\n    this.cdnUrl = cdnUrl;\n    this.token = null;\n    this.tokenExpiry = null;\n    this.refreshToken = null;\n\n    // Cache for transformed URLs\n    this.urlCache = new Map();\n  }\n\n  /**\n   * Internal method to handle authentication\n   * @private\n   */\n  async _ensureAuthenticated() {\n    // If token exists and is valid, return\n    if (this.token && this.tokenExpiry && this.tokenExpiry > Date.now()) {\n      return;\n    }\n\n    // If token expired or not set, authenticate\n    await this._authenticate();\n  }\n\n  /**\n   * Authenticate with the API\n   * @private\n   */\n  async _authenticate() {\n    try {\n      const response = await fetch(`${this.baseUrl}/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          api_key: this.apiKey,\n          api_secret: this.apiSecret,\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.msg || \"Authentication failed\");\n      }\n\n      const data = await response.json();\n      this.token = data.access_token;\n      this.refreshToken = data.refresh_token;\n      // Set expiry 5 minutes before actual expiry as a buffer\n      this.tokenExpiry = Date.now() + data.expires_in * 1000 - 5 * 60 * 1000;\n    } catch (error) {\n      console.error(\"VisionFly authentication error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Refresh the auth token\n   * @private\n   */\n  async _refreshToken() {\n    try {\n      const response = await fetch(`${this.baseUrl}/auth/refresh`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          refresh_token: this.refreshToken,\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.msg || \"Token refresh failed\");\n      }\n\n      const data = await response.json();\n      this.token = data.access_token;\n      this.refreshToken = data.refresh_token;\n      this.tokenExpiry = Date.now() + data.expires_in * 1000 - 5 * 60 * 1000;\n    } catch (error) {\n      console.error(\"VisionFly token refresh error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Make an authenticated request to the API\n   * @private\n   * @param {string} endpoint - API endpoint\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  async _request(endpoint, options = {}) {\n    await this._ensureAuthenticated();\n\n    const defaultOptions = {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n    };\n\n    const fullOptions = {\n      ...defaultOptions,\n      ...options,\n      headers: {\n        ...defaultOptions.headers,\n        ...options.headers,\n      },\n    };\n\n    try {\n      let response = await fetch(`${this.baseUrl}${endpoint}`, fullOptions);\n\n      // Handle token expiration\n      if (response.status === 401) {\n        await this._refreshToken();\n        fullOptions.headers.Authorization = `Bearer ${this.token}`;\n        response = await fetch(`${this.baseUrl}${endpoint}`, fullOptions);\n      }\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(\n          error.msg || `Request failed with status ${response.status}`\n        );\n      }\n\n      return response.json();\n    } catch (error) {\n      console.error(\"VisionFly request error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get a CDN URL for an image with transformations\n   * @param {Object} params - Transformation parameters\n   * @param {string} params.src - Source image URL\n   * @param {number} [params.width] - Width in pixels\n   * @param {number} [params.height] - Height in pixels\n   * @param {number} [params.quality=80] - Image quality (1-100)\n   * @param {string} [params.format='auto'] - Output format (auto, webp, avif, jpeg, png)\n   * @param {number} [params.blur] - Blur amount (0-100)\n   * @param {number} [params.sharpen] - Sharpen amount (0-100)\n   * @param {number} [params.brightness] - Brightness adjustment (-100 to 100)\n   * @param {number} [params.contrast] - Contrast adjustment (-100 to 100)\n   * @param {number} [params.saturation] - Saturation adjustment (-100 to 100)\n   * @param {number} [params.hue] - Hue rotation (0-360)\n   * @returns {Promise<string>} CDN URL\n   */\n  async getImageUrl(params) {\n    // Generate a cache key from the params\n    const cacheKey = JSON.stringify(params);\n\n    // Check cache first\n    if (this.urlCache.has(cacheKey)) {\n      return this.urlCache.get(cacheKey);\n    }\n\n    // Build query for the API\n    const apiParams = new URLSearchParams();\n\n    // Map user-friendly param names to API param names\n    const paramMap = {\n      src: \"src\",\n      width: \"w\",\n      height: \"h\",\n      quality: \"q\",\n      format: \"f\",\n      blur: \"blur\",\n      sharpen: \"sharp\",\n      brightness: \"bri\",\n      contrast: \"con\",\n      saturation: \"sat\",\n      hue: \"hue\",\n    };\n\n    // Add all params to query\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        const apiKey = paramMap[key] || key;\n        apiParams.append(apiKey, value);\n      }\n    });\n\n    // Get the transformed URL from the API\n    const endpoint = `/transform?${apiParams.toString()}`;\n    const result = await this._request(endpoint);\n\n    if (!result.public_url) {\n      throw new Error(\"Transform API did not return a public_url\");\n    }\n\n    // Cache the result\n    this.urlCache.set(cacheKey, result.public_url);\n\n    return result.public_url;\n  }\n\n  /**\n   * Generate a responsive srcset for an image\n   * @param {Object} params - Srcset parameters\n   * @param {string} params.src - Source image URL\n   * @param {Array<number>|string} [params.widths=[400,800,1200]] - Array or comma-separated string of widths\n   * @param {string} [params.format='auto'] - Output format\n   * @param {number} [params.quality=80] - Image quality\n   * @returns {Promise<Object>} Srcset data with processed URLs\n   */\n  async getSrcSet(params) {\n    const {\n      src,\n      widths = [400, 800, 1200],\n      format = \"auto\",\n      quality = 80,\n    } = params;\n\n    // Convert widths array to string if needed\n    const widthsStr = Array.isArray(widths) ? widths.join(\",\") : widths;\n\n    // Get srcset data from API\n    const apiParams = new URLSearchParams({\n      src,\n      w: widthsStr,\n      f: format,\n      q: quality,\n    });\n\n    const srcsetData = await this._request(\n      `/generate/srcset?${apiParams.toString()}`\n    );\n\n    // Process each URL in the srcset to get actual CDN URLs\n    const srcsetParts = srcsetData.srcset.split(\",\").map((part) => part.trim());\n    const processedParts = await Promise.all(\n      srcsetParts.map(async (part) => {\n        // Split part into URL and width descriptor\n        const [url, widthDesc] = part.split(\" \");\n\n        // Parse URL to get transform parameters\n        const urlObj = new URL(url);\n        const transformParams = {};\n\n        // Convert API params back to SDK format\n        const reverseParamMap = {\n          src: \"src\",\n          w: \"width\",\n          h: \"height\",\n          q: \"quality\",\n          f: \"format\",\n          blur: \"blur\",\n          sharp: \"sharpen\",\n          bri: \"brightness\",\n          con: \"contrast\",\n          sat: \"saturation\",\n          hue: \"hue\",\n        };\n\n        // Extract params from URL\n        for (const [key, value] of urlObj.searchParams.entries()) {\n          const paramKey = reverseParamMap[key] || key;\n          transformParams[paramKey] = value;\n        }\n\n        // Get CDN URL for this width\n        const cdnUrl = await this.getImageUrl(transformParams);\n\n        // Return new srcset entry with CDN URL\n        return `${cdnUrl} ${widthDesc}`;\n      })\n    );\n\n    // Process default URL\n    const defaultUrlObj = new URL(srcsetData.default);\n    const defaultParams = {};\n\n    // Convert API params back to SDK format for default URL\n    const reverseParamMap = {\n      src: \"src\",\n      w: \"width\",\n      h: \"height\",\n      q: \"quality\",\n      f: \"format\",\n      blur: \"blur\",\n      sharp: \"sharpen\",\n      bri: \"brightness\",\n      con: \"contrast\",\n      sat: \"saturation\",\n      hue: \"hue\",\n    };\n\n    // Extract params from default URL\n    for (const [key, value] of defaultUrlObj.searchParams.entries()) {\n      const paramKey = reverseParamMap[key] || key;\n      defaultParams[paramKey] = value;\n    }\n\n    // Get CDN URL for default\n    const defaultCdnUrl = await this.getImageUrl(defaultParams);\n\n    // Return processed srcset data\n    return {\n      srcset: processedParts.join(\", \"),\n      sizes: srcsetData.sizes,\n      default: defaultCdnUrl,\n    };\n  }\n\n  /**\n   * Upload an image to VisionFly\n   * @param {Object} params - Upload parameters\n   * @param {File|Blob} params.file - Image file to upload\n   * @param {string} params.projectId - Project ID\n   * @param {string} [params.publicId] - Optional custom public ID\n   * @returns {Promise<Object>} Upload result\n   */\n  async uploadImage(params) {\n    const { file, projectId, publicId } = params;\n\n    // Create form data\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"project_id\", projectId);\n\n    if (publicId) {\n      formData.append(\"public_id\", publicId);\n    }\n\n    // Upload the image\n    return this._request(\"/upload/\", {\n      method: \"POST\",\n      body: formData,\n      // Don't set Content-Type header for FormData\n      headers: {},\n    });\n  }\n\n  /**\n   * Clear URL cache\n   */\n  clearCache() {\n    this.urlCache.clear();\n  }\n}\n\nexport default VisionFly;\n","import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from \"react\";\nimport VisionFly from \"./visionfly-core\";\n\n// Create VisionFly context\nconst VisionFlyContext = createContext(null);\n\n/**\n * VisionFly Provider component\n * @param {Object} props - Component props\n * @param {Object} props.config - VisionFly configuration\n * @param {React.ReactNode} props.children - Child components\n */\nexport function VisionFlyProvider({ config, children }) {\n  const [client] = useState(() => new VisionFly(config));\n  const [ready, setReady] = useState(false);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Trigger authentication\n        await client._ensureAuthenticated();\n        setReady(true);\n      } catch (error) {\n        console.error(\"Failed to initialize VisionFly client:\", error);\n      }\n    };\n\n    init();\n  }, [client]);\n\n  // Context value\n  const contextValue = {\n    client,\n    ready,\n  };\n\n  return (\n    <VisionFlyContext.Provider value={contextValue}>\n      {children}\n    </VisionFlyContext.Provider>\n  );\n}\n\n/**\n * Hook to access VisionFly client\n * @returns {Object} VisionFly context\n */\nexport function useVisionFly() {\n  const context = useContext(VisionFlyContext);\n\n  if (!context) {\n    throw new Error(\"useVisionFly must be used within a VisionFlyProvider\");\n  }\n\n  return context;\n}\n\n/**\n * Image component with optimization\n * @param {Object} props - Component props\n */\nexport function VFImage({\n  src,\n  width,\n  height,\n  quality,\n  format,\n  blur,\n  sharpen,\n  brightness,\n  contrast,\n  saturation,\n  hue,\n  alt = \"\",\n  className = \"\",\n  style = {},\n  loading = \"lazy\",\n  ...restProps\n}) {\n  const { client, ready } = useVisionFly();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get optimized image URL\n  useEffect(() => {\n    if (!ready || !src) return;\n\n    let isMounted = true;\n    setIsLoading(true);\n\n    const loadImage = async () => {\n      try {\n        const url = await client.getImageUrl({\n          src,\n          width,\n          height,\n          quality,\n          format,\n          blur,\n          sharpen,\n          brightness,\n          contrast,\n          saturation,\n          hue,\n        });\n\n        if (isMounted) {\n          setImageUrl(url);\n          setIsLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          console.error(\"Failed to load image:\", err);\n          setError(err);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    loadImage();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [\n    client,\n    ready,\n    src,\n    width,\n    height,\n    quality,\n    format,\n    blur,\n    sharpen,\n    brightness,\n    contrast,\n    saturation,\n    hue,\n  ]);\n\n  // Placeholder while loading\n  if (isLoading) {\n    return (\n      <div\n        className={`vf-image-placeholder ${className}`}\n        style={{\n          width: width ? `${width}px` : \"100%\",\n          height: height ? `${height}px` : \"auto\",\n          backgroundColor: \"#f0f0f0\",\n          ...style,\n        }}\n        {...restProps}\n      />\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div\n        className={`vf-image-error ${className}`}\n        style={{\n          width: width ? `${width}px` : \"100%\",\n          height: height ? `${height}px` : \"auto\",\n          backgroundColor: \"#ff5555\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"white\",\n          ...style,\n        }}\n        {...restProps}\n      >\n        Error loading image\n      </div>\n    );\n  }\n\n  // Render optimized image\n  return (\n    <img\n      src={imageUrl}\n      alt={alt}\n      width={width}\n      height={height}\n      loading={loading}\n      className={`vf-image ${className}`}\n      style={style}\n      {...restProps}\n    />\n  );\n}\n\n/**\n * Responsive image component with srcset\n * @param {Object} props - Component props\n */\nexport function VFResponsiveImage({\n  src,\n  widths,\n  sizes,\n  quality,\n  format,\n  alt = \"\",\n  className = \"\",\n  style = {},\n  loading = \"lazy\",\n  ...restProps\n}) {\n  const { client, ready } = useVisionFly();\n  const [srcsetData, setSrcsetData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get srcset data\n  useEffect(() => {\n    if (!ready || !src) return;\n\n    let isMounted = true;\n    setIsLoading(true);\n\n    const loadSrcset = async () => {\n      try {\n        const data = await client.getSrcSet({\n          src,\n          widths,\n          format,\n          quality,\n        });\n\n        if (isMounted) {\n          setSrcsetData(data);\n          setIsLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          console.error(\"Failed to load srcset:\", err);\n          setError(err);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    loadSrcset();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [\n    client,\n    ready,\n    src,\n    widths && JSON.stringify(widths),\n    sizes,\n    quality,\n    format,\n  ]);\n\n  // Placeholder while loading\n  if (isLoading) {\n    return (\n      <div\n        className={`vf-image-placeholder ${className}`}\n        style={{\n          width: \"100%\",\n          height: \"300px\",\n          backgroundColor: \"#f0f0f0\",\n          ...style,\n        }}\n        {...restProps}\n      />\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div\n        className={`vf-image-error ${className}`}\n        style={{\n          width: \"100%\",\n          height: \"300px\",\n          backgroundColor: \"#ff5555\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"white\",\n          ...style,\n        }}\n        {...restProps}\n      >\n        Error loading image\n      </div>\n    );\n  }\n\n  // Render responsive image\n  return (\n    <img\n      src={srcsetData.default}\n      srcSet={srcsetData.srcset}\n      sizes={sizes || srcsetData.sizes}\n      alt={alt}\n      loading={loading}\n      className={`vf-responsive-image ${className}`}\n      style={style}\n      {...restProps}\n    />\n  );\n}\n\n/**\n * Image uploader component\n * @param {Object} props - Component props\n */\nexport function VFUploader({\n  projectId,\n  onUpload,\n  onError,\n  publicId,\n  multiple = false,\n  className = \"\",\n  style = {},\n  buttonClassName = \"\",\n  buttonStyle = {},\n  buttonText = \"Upload Image\",\n  children,\n  ...restProps\n}) {\n  const { client, ready } = useVisionFly();\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Handle file selection\n  const handleFileChange = useCallback(\n    async (event) => {\n      const files = event.target.files;\n      if (!files || files.length === 0) return;\n\n      setIsUploading(true);\n\n      try {\n        // Handle multiple files\n        if (multiple) {\n          const results = await Promise.all(\n            Array.from(files).map((file) =>\n              client.uploadImage({\n                file,\n                projectId,\n                publicId: publicId || undefined,\n              })\n            )\n          );\n\n          setIsUploading(false);\n          if (onUpload) onUpload(results);\n        }\n        // Handle single file\n        else {\n          const result = await client.uploadImage({\n            file: files[0],\n            projectId,\n            publicId: publicId || undefined,\n          });\n\n          setIsUploading(false);\n          if (onUpload) onUpload(result);\n        }\n\n        // Clear the file input\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n      } catch (err) {\n        setIsUploading(false);\n        console.error(\"Upload failed:\", err);\n        if (onError) onError(err);\n      }\n    },\n    [client, projectId, publicId, multiple, onUpload, onError]\n  );\n\n  // Custom button or default\n  const uploadButton = children || (\n    <button\n      type=\"button\"\n      className={`vf-upload-button ${buttonClassName}`}\n      style={buttonStyle}\n      disabled={isUploading || !ready}\n    >\n      {isUploading ? \"Uploading...\" : buttonText}\n    </button>\n  );\n\n  return (\n    <div className={`vf-uploader ${className}`} style={style} {...restProps}>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple={multiple}\n        onChange={handleFileChange}\n        style={{ display: \"none\" }}\n        id=\"vf-file-input\"\n      />\n      <label htmlFor=\"vf-file-input\">{uploadButton}</label>\n    </div>\n  );\n}\n\n// Export everything\nexport default {\n  VisionFlyProvider,\n  useVisionFly,\n  VFImage,\n  VFResponsiveImage,\n  VFUploader,\n};\n"],"names":["_catch","body","recover","result","e","then","VisionFly","_ref","apiSecret","_ref$baseUrl","baseUrl","_ref$cdnUrl","cdnUrl","this","apiKey","token","tokenExpiry","refreshToken","urlCache","Map","_proto","prototype","_ensureAuthenticated","_this","Date","now","Promise","resolve","_authenticate","reject","_this2","fetch","method","headers","JSON","stringify","api_key","api_secret","response","_temp2","_result2","json","data","access_token","refresh_token","expires_in","_temp","ok","error","Error","msg","console","_refreshToken","_this3","_temp4","_result4","_exit2","_temp3","_request","endpoint","options","_this4","defaultOptions","Authorization","fullOptions","_extends","_temp8","_temp6","_result5","_temp5","status","_temp7","_fetch","getImageUrl","params","_this5","cacheKey","has","get","apiParams","URLSearchParams","paramMap","src","width","height","quality","format","blur","sharpen","brightness","contrast","saturation","hue","Object","entries","forEach","_ref2","key","value","append","toString","public_url","set","getSrcSet","_this6","_params$widths","widths","_params$format","_params$quality","widthsStr","Array","isArray","join","w","f","q","srcsetData","srcsetParts","srcset","split","map","part","trim","all","_step","_part$split","widthDesc","urlObj","URL","transformParams","reverseParamMap","h","sharp","bri","con","sat","_iterator","_createForOfIteratorHelperLoose","searchParams","done","_step$value","processedParts","_step2","defaultParams","_iterator2","_step2$value","defaultCdnUrl","sizes","default","uploadImage","file","projectId","publicId","formData","FormData","clearCache","clear","VisionFlyContext","createContext","VisionFlyProvider","config","children","client","useState","_useState2","ready","setReady","useEffect","init","Provider","useVisionFly","context","useContext","VFImage","_ref2$alt","alt","_ref2$className","className","_ref2$style","style","_ref2$loading","loading","restProps","_objectWithoutPropertiesLoose","_excluded","_useVisionFly","_useState3","imageUrl","setImageUrl","_useState4","isLoading","setIsLoading","_useState5","setError","isMounted","url","err","loadImage","backgroundColor","display","alignItems","justifyContent","color","VFResponsiveImage","_ref3","_ref3$alt","_ref3$className","_ref3$style","_ref3$loading","_excluded2","_useVisionFly2","_useState6","setSrcsetData","_useState7","_useState8","loadSrcset","srcSet","VFUploader","_ref4","onUpload","onError","_ref4$multiple","multiple","_ref4$className","_ref4$style","_ref4$buttonClassName","buttonClassName","_ref4$buttonStyle","buttonStyle","_ref4$buttonText","buttonText","_excluded3","_useVisionFly3","_useState9","isUploading","setIsUploading","fileInputRef","useRef","handleFileChange","useCallback","event","files","target","length","current","from","undefined","results","uploadButton","type","disabled","ref","accept","onChange","id","htmlFor","visionflyReact"],"mappings":"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"}