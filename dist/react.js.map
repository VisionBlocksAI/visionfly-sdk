{"version":3,"file":"react.js","sources":["../src/visionfly-core.js","../src/visionfly-react.jsx"],"sourcesContent":["/**\n * VisionFly - Lightweight Image Optimization SDK\n * @version 1.0.0\n */\n\n/**\n * Core VisionFly client\n */\nclass VisionFly {\n  /**\n   * Initialize VisionFly SDK\n   * @param {Object} config - Configuration options\n   * @param {string} config.apiKey - Your VisionFly API key\n   * @param {string} config.apiSecret - Your VisionFly API secret\n   * @param {string} [config.baseUrl='https://api.visionfly.ai'] - Base API URL\n   * @param {string} [config.cdnUrl='https://cdn.visionfly.ai'] - CDN URL\n   */\n  constructor({\n    apiKey,\n    apiSecret,\n    baseUrl = \"https://api.visionfly.ai\",\n    cdnUrl = \"https://cdn.visionfly.ai\",\n  }) {\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n    this.baseUrl = baseUrl;\n    this.cdnUrl = cdnUrl;\n    this.token = null;\n    this.tokenExpiry = null;\n    this.refreshToken = null;\n\n    // Cache for transformed URLs\n    this.urlCache = new Map();\n  }\n\n  /**\n   * Internal method to handle authentication\n   * @private\n   */\n  async _ensureAuthenticated() {\n    // If token exists and is valid, return\n    if (this.token && this.tokenExpiry && this.tokenExpiry > Date.now()) {\n      return;\n    }\n\n    // If token expired or not set, authenticate\n    await this._authenticate();\n  }\n\n  /**\n   * Authenticate with the API\n   * @private\n   */\n  async _authenticate() {\n    try {\n      const response = await fetch(`${this.baseUrl}/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          api_key: this.apiKey,\n          api_secret: this.apiSecret,\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.msg || \"Authentication failed\");\n      }\n\n      const data = await response.json();\n      this.token = data.access_token;\n      this.refreshToken = data.refresh_token;\n      // Set expiry 5 minutes before actual expiry as a buffer\n      this.tokenExpiry = Date.now() + data.expires_in * 1000 - 5 * 60 * 1000;\n    } catch (error) {\n      console.error(\"VisionFly authentication error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Refresh the auth token\n   * @private\n   */\n  async _refreshToken() {\n    try {\n      const response = await fetch(`${this.baseUrl}/auth/refresh`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          refresh_token: this.refreshToken,\n        }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.msg || \"Token refresh failed\");\n      }\n\n      const data = await response.json();\n      this.token = data.access_token;\n      this.refreshToken = data.refresh_token;\n      this.tokenExpiry = Date.now() + data.expires_in * 1000 - 5 * 60 * 1000;\n    } catch (error) {\n      console.error(\"VisionFly token refresh error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Make an authenticated request to the API\n   * @private\n   * @param {string} endpoint - API endpoint\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  async _request(endpoint, options = {}) {\n    await this._ensureAuthenticated();\n\n    const defaultOptions = {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n    };\n\n    const fullOptions = {\n      ...defaultOptions,\n      ...options,\n      headers: {\n        ...defaultOptions.headers,\n        ...options.headers,\n      },\n    };\n\n    try {\n      let response = await fetch(`${this.baseUrl}${endpoint}`, fullOptions);\n\n      // Handle token expiration\n      if (response.status === 401) {\n        await this._refreshToken();\n        fullOptions.headers.Authorization = `Bearer ${this.token}`;\n        response = await fetch(`${this.baseUrl}${endpoint}`, fullOptions);\n      }\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(\n          error.msg || `Request failed with status ${response.status}`\n        );\n      }\n\n      return response.json();\n    } catch (error) {\n      console.error(\"VisionFly request error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get a CDN URL for an image with transformations\n   * @param {Object} params - Transformation parameters\n   * @param {string} params.src - Source image URL\n   * @param {number} [params.width] - Width in pixels\n   * @param {number} [params.height] - Height in pixels\n   * @param {number} [params.quality=80] - Image quality (1-100)\n   * @param {string} [params.format='auto'] - Output format (auto, webp, avif, jpeg, png)\n   * @param {number} [params.blur] - Blur amount (0-100)\n   * @param {number} [params.sharpen] - Sharpen amount (0-100)\n   * @param {number} [params.brightness] - Brightness adjustment (-100 to 100)\n   * @param {number} [params.contrast] - Contrast adjustment (-100 to 100)\n   * @param {number} [params.saturation] - Saturation adjustment (-100 to 100)\n   * @param {number} [params.hue] - Hue rotation (0-360)\n   * @returns {Promise<string>} CDN URL\n   */\n  async transformImage(params) {\n    // Generate a cache key from the params\n    const cacheKey = JSON.stringify(params);\n\n    // Check cache first\n    if (this.urlCache.has(cacheKey)) {\n      return this.urlCache.get(cacheKey);\n    }\n\n    // Build query for the API\n    const apiParams = new URLSearchParams();\n\n    // Map user-friendly param names to API param names\n    const paramMap = {\n      src: \"src\",\n      width: \"w\",\n      height: \"h\",\n      quality: \"q\",\n      format: \"f\",\n      blur: \"blur\",\n      sharpen: \"sharp\",\n      brightness: \"bri\",\n      contrast: \"con\",\n      saturation: \"sat\",\n      hue: \"hue\",\n    };\n\n    // Add all params to query\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        const apiKey = paramMap[key] || key;\n        apiParams.append(apiKey, value);\n      }\n    });\n\n    // Get the transformed URL from the API\n    const endpoint = `/transform?${apiParams.toString()}`;\n    const result = await this._request(endpoint);\n\n    if (!result.public_url) {\n      throw new Error(\"Transform API did not return a public_url\");\n    }\n\n    // Cache the result\n    this.urlCache.set(cacheKey, result.public_url);\n\n    return result.public_url;\n  }\n\n  /**\n   * Generate a responsive srcset for an image\n   * @param {Object} params - Srcset parameters\n   * @param {string} params.src - Source image URL (must be a VisionFly CDN URL)\n   * @param {Array<number>|string} [params.widths=[400,800,1200]] - Array or comma-separated string of widths\n   * @param {string} [params.format='auto'] - Output format (auto, webp, avif, jpeg, png)\n   * @param {number} [params.quality=80] - Image quality (1-100)\n   * @returns {Promise<Object>} Srcset data with processed URLs\n   */\n  async getSrcSet(params) {\n    const {\n      src,\n      widths = [400, 800, 1200],\n      format = \"auto\",\n      quality = 80,\n    } = params;\n\n    // Validate that URL is a VisionFly CDN URL\n    if (!src.startsWith(\"https://cdn.visionfly.ai/\")) {\n      throw new Error(\"Source URL must be a VisionFly CDN URL\");\n    }\n\n    // Convert widths array to string if needed\n    const widthsStr = Array.isArray(widths) ? widths.join(\",\") : widths;\n\n    // Get srcset data from API\n    const apiParams = new URLSearchParams({\n      src,\n      w: widthsStr,\n      f: format,\n      q: quality,\n    });\n\n    const srcsetData = await this._request(\n      `/generate/srcset?${apiParams.toString()}`\n    );\n\n    return srcsetData;\n  }\n\n  /**\n   * Upload an image to VisionFly\n   * @param {Object} params - Upload parameters\n   * @param {File|Blob} params.file - Image file to upload\n   * @param {string} [params.publicId] - Optional custom public ID\n   * @returns {Promise<Object>} Upload result with metadata and CDN URL\n   */\n  async uploadImage(params) {\n    const { file, publicId } = params;\n\n    // Validate file type\n    if (!file.type || !file.type.startsWith(\"image/\")) {\n      throw new Error(\"Invalid file type. Only image files are allowed.\");\n    }\n\n    // Create form data\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    if (publicId) {\n      formData.append(\"public_id\", publicId);\n    }\n\n    // Upload the image\n    return this._request(\"/upload\", {\n      method: \"POST\",\n      body: formData,\n      // Don't set Content-Type header for FormData\n      headers: {},\n    });\n  }\n\n  /**\n   * Clear URL cache\n   */\n  clearCache() {\n    this.urlCache.clear();\n  }\n}\n\nexport { VisionFly };\n","import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from \"react\";\nimport { VisionFly } from \"./visionfly-core\";\n\n// Create VisionFly context\nconst VisionFlyContext = createContext(null);\n\n/**\n * VisionFly Provider component\n * @param {Object} props - Component props\n * @param {Object} props.config - VisionFly configuration\n * @param {React.ReactNode} props.children - Child components\n */\nconst VisionFlyProvider = ({ config, children }) => {\n  const [client] = useState(() => new VisionFly(config));\n  const [ready, setReady] = useState(false);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Trigger authentication\n        await client._ensureAuthenticated();\n        setReady(true);\n      } catch (error) {\n        console.error(\"Failed to initialize VisionFly client:\", error);\n      }\n    };\n\n    init();\n  }, [client]);\n\n  // Context value\n  const contextValue = {\n    client,\n    ready,\n  };\n\n  return (\n    <VisionFlyContext.Provider value={contextValue}>\n      {children}\n    </VisionFlyContext.Provider>\n  );\n};\n\n/**\n * Hook to access VisionFly client\n * @returns {Object} VisionFly context\n */\nconst useVisionFly = () => {\n  const context = useContext(VisionFlyContext);\n\n  if (!context) {\n    throw new Error(\"useVisionFly must be used within a VisionFlyProvider\");\n  }\n\n  return context;\n};\n\n/**\n * Image component with optimization\n * @param {Object} props - Component props\n */\nconst VFImage = ({\n  src,\n  width,\n  height,\n  quality,\n  format,\n  blur,\n  sharpen,\n  brightness,\n  contrast,\n  saturation,\n  hue,\n  alt = \"\",\n  className = \"\",\n  style = {},\n  loading = \"lazy\",\n  ...restProps\n}) => {\n  const { client, ready } = useVisionFly();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get optimized image URL\n  useEffect(() => {\n    if (!ready || !src) return;\n\n    let isMounted = true;\n    setIsLoading(true);\n\n    const loadImage = async () => {\n      try {\n        const url = await client.getImageUrl({\n          src,\n          width,\n          height,\n          quality,\n          format,\n          blur,\n          sharpen,\n          brightness,\n          contrast,\n          saturation,\n          hue,\n        });\n\n        if (isMounted) {\n          setImageUrl(url);\n          setIsLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          console.error(\"Failed to load image:\", err);\n          setError(err);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    loadImage();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [\n    client,\n    ready,\n    src,\n    width,\n    height,\n    quality,\n    format,\n    blur,\n    sharpen,\n    brightness,\n    contrast,\n    saturation,\n    hue,\n  ]);\n\n  // Placeholder while loading\n  if (isLoading) {\n    return (\n      <div\n        className={`vf-image-placeholder ${className}`}\n        style={{\n          width: width ? `${width}px` : \"100%\",\n          height: height ? `${height}px` : \"auto\",\n          backgroundColor: \"#f0f0f0\",\n          ...style,\n        }}\n        {...restProps}\n      />\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div\n        className={`vf-image-error ${className}`}\n        style={{\n          width: width ? `${width}px` : \"100%\",\n          height: height ? `${height}px` : \"auto\",\n          backgroundColor: \"#ff5555\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"white\",\n          ...style,\n        }}\n        {...restProps}\n      >\n        Error loading image\n      </div>\n    );\n  }\n\n  // Render optimized image\n  return (\n    <img\n      src={imageUrl}\n      alt={alt}\n      width={width}\n      height={height}\n      loading={loading}\n      className={`vf-image ${className}`}\n      style={style}\n      {...restProps}\n    />\n  );\n};\n\n/**\n * Responsive image component with srcset\n * @param {Object} props - Component props\n */\nconst VFResponsiveImage = ({\n  src,\n  widths,\n  sizes,\n  quality,\n  format,\n  alt = \"\",\n  className = \"\",\n  style = {},\n  loading = \"lazy\",\n  ...restProps\n}) => {\n  const { client, ready } = useVisionFly();\n  const [srcsetData, setSrcsetData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Get srcset data\n  useEffect(() => {\n    if (!ready || !src) return;\n\n    let isMounted = true;\n    setIsLoading(true);\n\n    const loadSrcset = async () => {\n      try {\n        const data = await client.getSrcSet({\n          src,\n          widths,\n          format,\n          quality,\n        });\n\n        if (isMounted) {\n          setSrcsetData(data);\n          setIsLoading(false);\n        }\n      } catch (err) {\n        if (isMounted) {\n          console.error(\"Failed to load srcset:\", err);\n          setError(err);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    loadSrcset();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [\n    client,\n    ready,\n    src,\n    widths && JSON.stringify(widths),\n    sizes,\n    quality,\n    format,\n  ]);\n\n  // Placeholder while loading\n  if (isLoading) {\n    return (\n      <div\n        className={`vf-image-placeholder ${className}`}\n        style={{\n          width: \"100%\",\n          height: \"300px\",\n          backgroundColor: \"#f0f0f0\",\n          ...style,\n        }}\n        {...restProps}\n      />\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div\n        className={`vf-image-error ${className}`}\n        style={{\n          width: \"100%\",\n          height: \"300px\",\n          backgroundColor: \"#ff5555\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          color: \"white\",\n          ...style,\n        }}\n        {...restProps}\n      >\n        Error loading image\n      </div>\n    );\n  }\n\n  // Render responsive image\n  return (\n    <img\n      src={srcsetData.default}\n      srcSet={srcsetData.srcset}\n      sizes={sizes || srcsetData.sizes}\n      alt={alt}\n      loading={loading}\n      className={`vf-responsive-image ${className}`}\n      style={style}\n      {...restProps}\n    />\n  );\n};\n\n/**\n * Image uploader component\n * @param {Object} props - Component props\n */\nconst VFUploader = ({\n  projectId,\n  onUpload,\n  onError,\n  publicId,\n  multiple = false,\n  className = \"\",\n  style = {},\n  buttonClassName = \"\",\n  buttonStyle = {},\n  buttonText = \"Upload Image\",\n  children,\n  ...restProps\n}) => {\n  const { client, ready } = useVisionFly();\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Handle file selection\n  const handleFileChange = useCallback(\n    async (event) => {\n      const files = event.target.files;\n      if (!files || files.length === 0) return;\n\n      setIsUploading(true);\n\n      try {\n        // Handle multiple files\n        if (multiple) {\n          const results = await Promise.all(\n            Array.from(files).map((file) =>\n              client.uploadImage({\n                file,\n                projectId,\n                publicId: publicId || undefined,\n              })\n            )\n          );\n\n          setIsUploading(false);\n          if (onUpload) onUpload(results);\n        }\n        // Handle single file\n        else {\n          const result = await client.uploadImage({\n            file: files[0],\n            projectId,\n            publicId: publicId || undefined,\n          });\n\n          setIsUploading(false);\n          if (onUpload) onUpload(result);\n        }\n\n        // Clear the file input\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n      } catch (err) {\n        setIsUploading(false);\n        console.error(\"Upload failed:\", err);\n        if (onError) onError(err);\n      }\n    },\n    [client, projectId, publicId, multiple, onUpload, onError]\n  );\n\n  // Custom button or default\n  const uploadButton = children || (\n    <button\n      type=\"button\"\n      className={`vf-upload-button ${buttonClassName}`}\n      style={buttonStyle}\n      disabled={isUploading || !ready}\n    >\n      {isUploading ? \"Uploading...\" : buttonText}\n    </button>\n  );\n\n  return (\n    <div className={`vf-uploader ${className}`} style={style} {...restProps}>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple={multiple}\n        onChange={handleFileChange}\n        style={{ display: \"none\" }}\n        id=\"vf-file-input\"\n      />\n      <label htmlFor=\"vf-file-input\">{uploadButton}</label>\n    </div>\n  );\n};\n\n// Export everything\nexport {\n  VisionFlyProvider,\n  useVisionFly,\n  VFImage,\n  VFResponsiveImage,\n  VFUploader,\n};\n"],"names":["VisionFly","_ref","apiKey","apiSecret","_ref$baseUrl","baseUrl","_ref$cdnUrl","cdnUrl","_classCallCheck","this","token","tokenExpiry","refreshToken","urlCache","Map","key","value","_ensureAuthenticated2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Date","now","abrupt","_authenticate","stop","apply","arguments","_authenticate2","_callee2","response","error","data","_context2","fetch","concat","method","headers","body","JSON","stringify","api_key","api_secret","sent","ok","json","Error","msg","access_token","refresh_token","expires_in","t0","console","_refreshToken2","_callee3","_context3","_request2","_callee4","endpoint","options","defaultOptions","fullOptions","_args4","_context4","length","undefined","_ensureAuthenticated","Authorization","_objectSpread","status","_refreshToken","_x","_transformImage","_callee5","params","cacheKey","apiParams","paramMap","result","_context5","has","get","URLSearchParams","src","width","height","quality","format","blur","sharpen","brightness","contrast","saturation","hue","Object","entries","forEach","_ref2","_ref3","_slicedToArray","append","toString","_request","public_url","set","_x2","_getSrcSet","_callee6","_params$widths","widths","_params$format","_params$quality","widthsStr","srcsetData","_context6","startsWith","Array","isArray","join","w","f","q","_x3","_uploadImage","_callee7","file","publicId","formData","_context7","type","FormData","_x4","clear","VisionFlyContext","createContext","useVisionFly","context","useContext","_ref3$alt","alt","_ref3$className","className","_ref3$style","style","_ref3$loading","loading","restProps","_objectWithoutProperties","_excluded","_useVisionFly","client","ready","_useState6","useState","imageUrl","setImageUrl","_useState8","isLoading","setIsLoading","_useState0","setError","useEffect","isMounted","loadImage","_ref4","url","getImageUrl","React","createElement","_extends","backgroundColor","display","alignItems","justifyContent","color","_ref5","sizes","_ref5$alt","_ref5$className","_ref5$style","_ref5$loading","_excluded2","_useVisionFly2","_useState10","setSrcsetData","_useState12","_useState14","loadSrcset","_ref6","getSrcSet","srcSet","srcset","_ref7","projectId","onUpload","onError","_ref7$multiple","multiple","_ref7$className","_ref7$style","_ref7$buttonClassName","buttonClassName","_ref7$buttonStyle","buttonStyle","_ref7$buttonText","buttonText","children","_excluded3","_useVisionFly3","_useState16","isUploading","setIsUploading","fileInputRef","useRef","handleFileChange","useCallback","_ref8","event","files","results","target","Promise","all","from","map","uploadImage","current","uploadButton","disabled","ref","accept","onChange","id","htmlFor","config","_useState4","setReady","init","contextValue","Provider"],"mappings":"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"}